import requests
import os
import time
import threading
import re
from bs4 import BeautifulSoup


def download_page(url):
   '''
   用于下载页面
   '''
   headers = {
       'User-Agent': 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)',
       'Referer': 'http://www.mzitu.com'
   }
   r = requests.get(url, headers=headers)
   r.encoding = 'utf-8'
   return r.text


def get_pic_list(html):
   '''
   获取每个页面的套图列表,之后循环调用get_pic函数获取图片
   '''
   soup = BeautifulSoup(html, 'html.parser')
   # pic_list = soup.find_all('li', class_='wp-item')
   pic_div = soup.find('div', class_='postlist')
   pic_list = pic_div.find_all('li')
   for i in pic_list:
       a_tag = i.find('a')
       link = a_tag.get('href')
       text = a_tag.find('img').get('alt')
       get_pic(link, text)


def get_pic(link, text):
   '''
   获取当前页面的图片,并保存
   '''
   html = download_page(link)  # 下载界面
   soup = BeautifulSoup(html, 'html.parser')
   pic_url = soup.find('div', class_='main-image').find('img', class_='blur')
   pic_number = int(soup.find('div', class_='pagenavi').find_all('span')[-2].get_text())
   headers = {
       'User-Agent': 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)',
       'Referer': 'https://www.mzitu.com'
   }
   create_dir('pic/{}'.format(text))
   # for i in pic_list:
   #     pic_link = i.get('src')  # 拿到图片的具体 url
   #     r = requests.get(pic_link, headers=headers)  # 下载图片，之后保存到文件
   #     with open('pic/{}/{}'.format(text, link.split('/')[-1]), 'wb') as f:
   #         f.write(r.content)
   #         time.sleep(1)   # 休息一下，不要给网站太大压力，避免被封
   pic_link = pic_url.get('src')  # 拿到图片的具体 url
   pic_dellink = re.search(r'[0-9]*.jpg', pic_link)
   pic_mother_link = pic_link.rstrip(str(pic_dellink.group()))     #拿到母url
   pic_list = []  # 找到界面所有图片
   for i in range(1, pic_number+1):
       if i<10:
           i = '0' + str(i)
       else:
           i = str(i)
       pic_list.append(pic_mother_link+str(i)+'.jpg')
   for pic_onelink in pic_list:
       r = requests.get(pic_onelink, headers=headers)  # 下载图片，之后保存到文件
       with open('pic/{}/{}'.format(text, pic_onelink.split('/')[-1]), 'wb') as f:
           f.write(r.content)
           print('下载完成：'+pic_onelink)
           time.sleep(1)  # 休息一下，不要给网站太大压力，避免被封


def create_dir(name):
   if not os.path.exists(name):
       os.makedirs(name)


def execute(url):
   page_html = download_page(url)
   get_pic_list(page_html)


def main():
   create_dir('pic')
   # queue = [i for i in range(1, 72)]   # 构造 url 链接 页码。
   queue = [204891, 204830]
   threads = []
   while len(queue) > 0:
       for thread in threads:
           if not thread.is_alive():
               threads.remove(thread)
       while len(threads) < 5 and len(queue) > 0:   # 最大线程数设置为 5
           cur_page = queue.pop(0)
           # url = 'http://www.mzitu.com/{}.html'.format(cur_page)
           url = 'https://www.mzitu.com'
           # thread = threading.Thread(target=execute, args=(url,))
           # thread.setDaemon(True)
           # thread.start()
           # print('{}正在下载{}页'.format(threading.current_thread().name, cur_page))
           # threads.append(thread)
           execute(url)


if __name__ == '__main__':
   main()
